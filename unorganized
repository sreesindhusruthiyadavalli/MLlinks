

Useful links:
https://epistasislab.github.io/tpot/
https://cloud.google.com/automl/
https://arxiv.org/abs/1803.06744
https://github.com/kubeflow/katib
https://www.solver.com/press/backgrounder-genetic-and-evolutionary-algorithms-versus-classical-optimization

https://blog.engineyard.com/2014/building-a-vagrant-box
image processing using opencv wit python
http://www.pyimagesearch.com/2017/07/31/bank-check-ocr-opencv-python-part-ii/
https://www.pyimagesearch.com/2017/07/24/bank-check-ocr-with-opencv-and-python-part-i/
http://www.pyimagesearch.com/2017/07/17/credit-card-ocr-with-opencv-and-python/
http://www.pyimagesearch.com/2017/07/03/installing-tesseract-for-ocr/


Paper reference:

file:///Users/sryadava/Downloads/64622-125242-3-PB.pdf

ambulance detection using image processing
http://www.geeksforgeeks.org/opencv-python-program-vehicle-detection-video-frame/


https://10.105.219.93/ui/#?extensionId=com.cisco.ucs.vcplugin.handle.ManageView&objectId=urn:ucs:ciscoUCS:UcsHandleMap:UCS%2F%2F10.105.219.248&navigator=tree

https://www.kadenze.com/courses/creative-applications-of-deep-learning-with-tensorflow-iv/sessions/introduction-to-tensorflow

https://medium.freecodecamp.org/dive-into-deep-learning-with-these-23-online-courses-bf247d289cc0

https://github.com/pkmital/CADL/tree/master/session-0

https://github.com/pkmital/CADL/blob/master/README.md#osxlinux


https://docs.continuum.io/anaconda/install/mac-os

https://www.anaconda.com/download/#macos

Open cv courses:
https://courses.learnopencv.com/p/opencv-for-beginners

Pytorch:
http://adventuresinmachinelearning.com/pytorch-tutorial-deep-learning/

https://gogul09.github.io/software/deep-learning-for-music
https://towardsdatascience.com/deep-learning-with-tensorflow-part-3-music-and-text-generation-8a3fbfdc5e9b

Intel AI developer program:

https://software.intel.com/en-us/ai/courses/deep-learning

Ml study links:

https://bcourses.berkeley.edu/courses/1453965/pages/cs294-129-designing-visualizing-and-understanding-deep-neural-networks

http://cs231n.stanford.edu/slides/2017/cs231n_2017_lecture12.pdf

Recommender Systems:

https://www.kaggle.com/gspmoreira/recommender-systems-in-python-101


Papers:

http://ceur-ws.org/Vol-1438/paper10.pdf

Articles:

https://www.techemergence.com/use-cases-recommendation-systems/
https://www.toptal.com/algorithms/predicting-likes-inside-a-simple-recommendation-engine

Conference links:

https://learn.openshift.com/subsystems/
https://www.slideshare.net/baijum/restful-api-development-using-go
https://www.youtube.com/watch?v=OSPNUKoN81o&t=34s
https://www.katacoda.com/
https://www.katacoda.com/courses/machine-learning

Cloud links:
https://etherpad.openstack.org/p/cisco

Session efifnity
CAP theorem
https://dzone.com/articles/cloud-workloads-simplified






